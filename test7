package main

import (
	"encoding/csv"
	"fmt"
	"os"
)

func main() {
	// Open the CSV file
	file, err := os.Open("input.csv")
	if err != nil {
		fmt.Println("Error opening file:", err)
		return
	}
	defer file.Close()

	// Create a new CSV reader
	reader := csv.NewReader(file)

	// Read the first row to get the number of fields
	records, err := reader.ReadAll()
	if err != nil {
		fmt.Println("Error reading CSV:", err)
		return
	}

	// Get the expected number of fields (columns) from the first row
	expectedFields := len(records[0])

	// Create a new slice to hold only valid rows
	var validRecords [][]string

	// Iterate over the records
	for i, record := range records {
		if len(record) == expectedFields {
			// Remove the last column
			validRecords = append(validRecords, record[:len(record)-1])
		} else {
			fmt.Printf("Skipping line %d due to wrong number of fields\n", i+1)
		}
	}

	// Create a new CSV file to save the updated data
	outputFile, err := os.Create("output.csv")
	if err != nil {
		fmt.Println("Error creating file:", err)
		return
	}
	defer outputFile.Close()

	// Write the updated records to the new CSV file
	writer := csv.NewWriter(outputFile)
	err = writer.WriteAll(validRecords)
	if err != nil {
		fmt.Println("Error writing CSV:", err)
		return
	}

	fmt.Println("Last column removed successfully, invalid rows skipped!")
}